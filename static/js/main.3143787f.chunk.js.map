{"version":3,"sources":["Context/Snackbar/index.js","Lib/Request/index.js","Component/WaitScreenOverlay/index.js","Context/Auth/index.js","Component/GuestRoute/index.js","Component/ProtectedRoute/index.js","Component/Topbar/index.js","Ui/app.login/index.js","Component/DateCard/index.js","Component/DateCardSkeleton/index.js","Component/DateContainer/index.js","Component/DatePicker/index.js","Ui/app.dashboard/transformInterrupts.js","Hooks/useRequest/types.js","Hooks/useRequest/reducer.js","Hooks/useRequest/index.js","Ui/app.dashboard/index.js","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","open","message","color","show","useSnackbar","useContext","SnackbarProvider","props","useState","setOpen","setMessage","setColor","handleClose","Provider","value","children","Snackbar","autoHideDuration","onClose","Alert","severity","variant","Axios","request","axios","create","baseURL","process","interceptors","response","use","error","a","data","status","statusText","headers","config","includes","originalRequest","localStorage","removeItem","ShowLoader","ready","content","className","WaitScreenOverlay","defaultUser","name","email","avatar","user","token","isAuthenticated","setCredential","forgetCredential","AuthenticationProvider","setUser","setAuthenticated","setReady","useEffect","getItem","getMe","accessToken","get","Authorization","picture","setItem","obj","useAuthentication","GuestRoute","Component","component","render","innerProps","to","pathname","state","prev","location","ProtectedRoute","useStyles","makeStyles","theme","menuPadding","flexGrow","menu","Topbar","styles","history","useHistory","snackbar","AppBar","position","Toolbar","IconButton","onClick","event","push","Avatar","alt","src","Login","console","log","disabled","clientId","buttonText","onSuccess","params","profileObj","imageUrl","tokenId","onFailure","cookiePolicy","DateCard","month","day","year","handleRemoveLeave","showCancelInterruptBtn","setCancelInterruptBtn","onClickAction","cursorType","onMouseOver","onMouseOut","defaultProps","DateCardSkeleton","DateContainer","isLoaded","onCardRemove","LoadCards","length","map","item","key","id","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","DatePicker","date","handleDateChange","label","ThemeProvider","utils","DateFnsUtils","Grid","container","justify","margin","disablePast","format","fullWidth","onChange","KeyboardButtonProps","Date","dayjs","extend","customFormat","transformInterrupts","interrupts","toString","split","types","LOADING","LOADED","ERROR","initialState","reducer","action","type","useRequest","useReducer","dispatch","post","useCallback","url","body","api","mapFunction","remove","newDate","_","delete","Dashboard","loaded","setLoaded","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3143787f.chunk.js","sourcesContent":["import Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { createContext, useContext, useState } from 'react';\n\nconst Context = createContext({\n  open: true,\n  message: '',\n  color: 'error',\n  show: (message, color) => {}\n});\n\nexport const useSnackbar = () => useContext(Context);\n\nexport const SnackbarProvider = (props) => {\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('default message');\n  const [color, setColor] = useState('info');\n\n  const handleClose = () => setOpen(false);\n\n  const show = (message, color) => {\n    setOpen(true);\n    setMessage(message);\n    setColor(color);\n  }\n\n  return (\n    <Context.Provider value={{ open, message, color, show }}>\n      { props.children }\n\n      <Snackbar\n        open={open}\n        autoHideDuration={2500}\n        onClose={handleClose}\n      >\n        <Alert\n          severity={color}\n          variant=\"filled\"\n          color={color}\n          onClose={handleClose}\n        >\n          { message }\n        </Alert>\n      </Snackbar>\n    </Context.Provider>\n  );\n}\n","import axios from 'axios';\n\nfunction Axios() {\n  const request = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL\n  });\n\n  request.interceptors.response.use((response) => response, async (error) => {\n    if (!error.response?.data) {\n      error.response = !!error.response ? error.response : {\n        data: {},\n        status: 500,\n        statusText: '',\n        headers: {},\n        config: {}\n      };\n\n      error.response.data = {\n        message: 'Cannot connect to the API'\n      }\n    }\n\n    if ([401].includes(error.response.status) && error.config) {\n      const originalRequest = error.config;\n      localStorage.removeItem('access_token');\n\n      return request(originalRequest);\n    }\n\n    if ([403].includes(error.response.status)) {\n      localStorage.removeItem('access_token');\n    }\n\n    throw error;\n  });\n\n  return request;\n}\n\nexport default Axios();","import { Fragment } from 'react';\nimport 'loaders.css';\n\nconst ShowLoader = (props) => {\n  if (!props.ready) {\n    return (\n      <div className=\"flex h-screen w-screen justify-center items-center\">\n        <div>\n          <div className=\"loader\">\n            <div className=\"pacman\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return props.content;\n};\n\nconst WaitScreenOverlay = (props) => {\n  const { ready, children } = props;\n\n  return (\n    <Fragment>\n      <ShowLoader\n        content={children}\n        ready={ready}\n      />\n    </Fragment>\n  );\n};\n\nexport default WaitScreenOverlay;\n","import {\n  createContext, useContext, useEffect, useState\n} from 'react';\nimport { useSnackbar } from '../Snackbar';\nimport request from '../../Lib/Request';\nimport WaitScreenOverlay from '../../Component/WaitScreenOverlay';\n\nconst defaultUser = {\n  name: '',\n  email: '',\n  avatar: ''\n};\n\nconst Context = createContext({\n  user: { ...defaultUser },\n  token: '',\n  isAuthenticated: false,\n  setCredential: () => {},\n  forgetCredential: () => {}\n});\n\nexport const AuthenticationProvider = (props) => {\n  const { show } = useSnackbar();\n  const [user, setUser] = useState(defaultUser);\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [ready, setReady] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n\n    const getMe = async (accessToken) => {\n      try {\n        const response = await request.get('/me', {\n          headers: {\n            Authorization: accessToken\n          }\n        });\n    \n        const { email, name, picture, token } = response.data;\n        \n        localStorage.setItem('access_token', token);\n    \n        setUser({\n          avatar: picture,\n          email,\n          name\n        });\n        setAuthenticated(true);\n        setReady(true);\n      } catch (error) {\n        localStorage.removeItem('access_token');\n  \n        throw error;\n      }\n    }\n\n    if (!token) {\n      setAuthenticated(false);\n      setReady(true);\n      return;\n    }\n\n    getMe(token);\n  }, [isAuthenticated, ready]);\n\n  const setCredential = async (obj) => {\n    try {\n      const response = await request.get('/me', {\n        headers: {\n          Authorization: obj.token\n        }\n      });\n\n      const { email, name, picture, token } = response.data;\n\n      setUser({\n        email,\n        name,\n        avatar: picture\n      });\n\n      localStorage.setItem('access_token', token);\n      setAuthenticated(true);\n      setReady(true);\n\n    } catch (error) {\n      show('Login failed', 'error');\n\n      throw error;\n    }\n  };\n\n  const forgetCredential = () => {\n    localStorage.removeItem('access_token');\n    setAuthenticated(false);\n    setReady(true);\n  }\n\n  return (\n    <Context.Provider value={{\n      setCredential,\n      forgetCredential,\n      user,\n      isAuthenticated,\n      ready\n    }}>\n      <WaitScreenOverlay ready={ready}>\n        { props.children }\n      </WaitScreenOverlay>\n    </Context.Provider>\n  );\n};\n\nexport const useAuthentication = () => useContext(Context);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuthentication } from '../../Context/Auth';\n\nconst GuestRoute = ({ component: Component, render, ...props }) => {\n  const { isAuthenticated } = useAuthentication();\n\n  return (\n    <Route {...props} render={ (innerProps) => {\n      if (isAuthenticated) {\n        return <Redirect to={{\n          pathname: \"/\",\n          state: { prev: innerProps.location }\n        }} />;\n      }\n\n      if (Component) {\n        return <Component {...innerProps} />\n      }\n\n      return (render)(innerProps);\n    }} />\n  );\n};\n\nexport default GuestRoute;\n","import React from 'react';\nimport { useAuthentication } from '../../Context/Auth';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, render, ...props }) => {\n  const { isAuthenticated } = useAuthentication();\n\n  return (\n    <Route {...props} render={ (innerProps) => {\n      if (!isAuthenticated) {\n        return <Redirect to={{\n          pathname: \"/login\",\n          state: { prev: innerProps.location }\n        }} />;\n      }\n\n      if (Component) {\n        return <Component {...innerProps} />\n      }\n\n      return (render)(innerProps);\n    }} />\n  )\n};\n\nexport default ProtectedRoute;\n","import './index.css';\nimport { Fragment } from \"react\";\nimport { useAuthentication } from '../../Context/Auth';\nimport { useSnackbar } from '../../Context/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  menuPadding: {\n    flexGrow: 1\n  },\n  menu: {}\n}));\n\nconst Topbar = (props) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const snackbar = useSnackbar();\n  const { user, isAuthenticated, forgetCredential } = useAuthentication();\n\n  const Logout = (event) => {\n    forgetCredential();\n    history.push('/');\n    snackbar.show('Logout successfully', 'success');\n  }\n\n  return (\n    <Fragment>\n      <div className=\"min-h-screen min-w-full\">\n        {\n          isAuthenticated && (\n            <AppBar position=\"sticky\" color=\"inherit\">\n              <Toolbar>\n                <div className={styles.menuPadding}></div>\n                <div className={styles.menu}>\n                  <IconButton onClick={Logout}>\n                    <Avatar alt={user.name} src={user.avatar} />\n                  </IconButton>\n                </div>\n              </Toolbar>\n            </AppBar>\n          )\n        }\n        <div className=\"min-h-screen min-w-full topbar-margin\">\n          { props.children }\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Topbar;","import './index.css';\nimport { GoogleLogin } from 'react-google-login';\nimport { useAuthentication } from '../../Context/Auth';\nimport { useSnackbar } from '../../Context/Snackbar';\n\nconst Login = () => {\n  console.log(process.env.REACT_APP_CLIENT_ID)\n  const { setCredential } = useAuthentication();\n  const snackbar = useSnackbar();\n\n  const LoginAction = (params) => {\n    const user = {\n      email: params.profileObj.email,\n      avatar: params.profileObj.imageUrl,\n      name: params.profileObj.name,\n      token: params.tokenId\n    }; \n    \n    setCredential(user);\n\n    snackbar.show(`Welcome ${user.name}!`, 'success');\n  }\n\n  const LoginFailAction = (error) => {\n    snackbar.show('Login failed', 'error');\n  }\n\n  return (\n    <div className=\"grid min-w-full max-w-full min-h-screen max-h-screen justify-center content-center\">\n      <div>\n        <GoogleLogin\n          disabled={false}\n          clientId={process.env.REACT_APP_CLIENT_ID}\n          buttonText=\"Login with Google\"\n          onSuccess={LoginAction}\n          onFailure={LoginFailAction}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { Fragment } from \"react\";\nimport { useState } from \"react\";\n\nconst DateCard = (props) => {\n  const noop = () => {};\n  const {\n    month,\n    day,\n    year,\n    handleRemoveLeave\n  } = props;\n  const [showCancelInterruptBtn, setCancelInterruptBtn] = useState(false);\n\n  const handleMouseOver = (event) => {\n    setCancelInterruptBtn(true);\n  };\n\n  const handleMouseOut = (event) => {\n    setCancelInterruptBtn(false);\n  }\n\n  const onClickAction = showCancelInterruptBtn ? handleRemoveLeave : noop;\n  const cursorType = showCancelInterruptBtn ? ' cursor-pointer' : '';\n\n  return (\n    <div>\n      <div\n        className={`grid shadow-md w-48 h-48 bg-white rounded-md justify-center justify-items-center items-center${cursorType}`}\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n        onClick={onClickAction}\n      >\n        {\n          showCancelInterruptBtn ? (\n            <p className=\"text-red-500 cursor-pointer\">Remove leave</p>\n          ) : (\n            <Fragment>\n              <p className=\"text-3xl\">{month}</p>\n              <p className=\"text-7xl\">{day}</p>\n              <p className=\"text-2xl\">{year}</p>\n            </Fragment>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nDateCard.defaultProps = {\n  month: 'February',\n  day: '6',\n  year: '1996',\n  handleRemoveLeave: () => console.log('removed')\n};\n\nexport default DateCard;\n","import { Fragment } from \"react\";\n\nconst DateCardSkeleton = (props) => {\n  return (\n    <div>\n      <div\n        className={`grid animate-pulse shadow-md w-48 h-48 bg-white rounded-md justify-center justify-items-center`}\n      >\n        <Fragment>\n          <p className=\"text-3xl\"></p>\n          <p className=\"text-7xl\"></p>\n          <p className=\"text-2xl\"></p>\n        </Fragment>\n      </div>\n    </div>\n  );\n};\n\nDateCardSkeleton.defaultProps = {\n};\n\nexport default DateCardSkeleton;\n","import { Fragment } from 'react';\nimport DateCard from '../DateCard';\nimport DateCardSkeleton from '../DateCardSkeleton';\n\nconst DateContainer = (props) => {\n  const { data, isLoaded, onCardRemove } = props;\n\n  const LoadCards = () => {\n    if (!isLoaded) {\n      return (\n        <Fragment>\n          <DateCardSkeleton />\n          <DateCardSkeleton />\n          <DateCardSkeleton />\n          <DateCardSkeleton />\n          <DateCardSkeleton />\n        </Fragment>\n      );\n    }\n\n    if (!data.length) {\n      return (\n        <div className=\"mt-20\">\n          <p className=\"text-4xl text-yellow-400\">No upcoming leaves</p>\n        </div>\n      );\n    }\n\n    return data.map((item) => {\n      const removeLeave = () => {\n        return onCardRemove(item.id);\n      }\n      return (\n        <DateCard\n          {...item}\n          key={item.id}\n          handleRemoveLeave={removeLeave}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"grid grid-flow-col gap-4\">\n      <LoadCards />\n    </div>\n  );\n};\n\nDateContainer.defaultProps = {\n  data: [],\n  isLoaded: false,\n  onCardRemove: () => {}\n};\n\nexport default DateContainer;\n","import React from 'react';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ededed',\n      main: '#ffffff',\n      dark: '#c7c5c5',\n      contrastText: '#fff',\n    },\n  },\n});\n\nconst DatePicker = (props) => {\n  const { date, handleDateChange, label } = props;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid container justify=\"space-around\">\n          <KeyboardDatePicker\n            margin=\"normal\"\n            disablePast={true}\n            id=\"date-picker-dialog\"\n            label={label}\n            format=\"yyyyMMdd\"\n            value={date}\n            fullWidth={true}\n            color=\"secondary\"\n            onChange={handleDateChange}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n        </Grid>\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n};\n\nDatePicker.defaultProps = {\n  date: new Date(),\n  handleDateChange: () => {},\n  label: 'Pick-a-date'\n}\n\nexport default DatePicker;\n","import dayjs from 'dayjs';\nimport customFormat from 'dayjs/plugin/customParseFormat';\n\ndayjs.extend(customFormat);\n\nconst transformInterrupts = (data) => {\n  try {\n    data = data.interrupts;\n\n    return data.map((item) => {\n      const { date } = item;\n      const [year, month, day] = dayjs(date.toString(), 'YYYYMMDD').format('YYYY-MMMM-DD').split('-');\n  \n      return {\n        id: item.date,\n        month,\n        day,\n        year\n      };\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default transformInterrupts;\n","const types = {\n  LOADING: \"LOADING\",\n  LOADED: \"LOADED\",\n  ERROR: \"ERROR\"\n};\n\nexport default types;\n","import types from './types';\n\nexport const initialState = {\n  status: null,\n  data: {}\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOADING:\n      return { ...initialState, status: types.LOADING, data: action.data };\n    case types.LOADED:\n      return { ...state, status: types.LOADED, data: action.data };\n    case types.ERROR:\n      return { ...state, status: types.ERROR, data: action.data };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { useReducer, useCallback } from 'react';\nimport reducer, { initialState } from './reducer';\nimport types from './types';\nimport api from '../../Lib/Request';\nimport { useAuthentication } from '../../Context/Auth';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\nimport customFormat from 'dayjs/plugin/customParseFormat';\n\ndayjs.extend(customFormat);\n\nconst useRequest = () => {\n  const { forgetCredential } = useAuthentication();\n  const history = useHistory();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const post = useCallback(async (url, value, params) => {\n    dispatch({\n      type: types.LOADING,\n      data: state.data\n    });\n\n    try {\n      const token = localStorage.getItem('access_token');\n\n      const config = {\n        params,\n        headers: {\n          Authorization: token\n        }\n      };\n      const [year, month, day] = dayjs(value.toString(), 'YYYYMMDD').format('YYYY-MMMM-DD').split('-');\n\n      const body = {\n        date: value\n      };\n\n      await api.post(url, body, config);\n\n      dispatch({\n        type: types.LOADED,\n        data: [\n          ...state.data,\n          {\n            id: value,\n            year,\n            month,\n            day\n          }\n        ]\n      });\n    } catch (error) {\n      if ([401, 403].includes(error.response.status)) {\n        forgetCredential();\n        history.push('/login');\n        return;\n      }\n\n      dispatch({\n        type: types.ERROR,\n        data: error.response.data\n      });\n    }\n  }, [history, forgetCredential, state]);\n\n  const get = useCallback(async (url, params, mapFunction) => {\n    dispatch({\n      type: types.LOADING\n    });\n\n    try {\n      const token = localStorage.getItem('access_token');\n\n      const config = {\n        params,\n        headers: {\n          Authorization: token\n        }\n      };\n\n      const response = await api.get(url, config);\n\n      let data = response.data;\n\n      if (mapFunction) {\n        data = mapFunction(data);\n      }\n\n      dispatch({\n        type: types.LOADED,\n        data\n      });\n    } catch (error) {\n      if ([401, 403].includes(error.response.status)) {\n        forgetCredential();\n        history.push('/login');\n        return;\n      }\n\n      dispatch({\n        type: types.ERROR,\n        data: error.response.data\n      });\n    }\n  }, [history, forgetCredential]);\n\n  const remove = useCallback(async (url, id) => {\n    dispatch({\n      type: types.LOADING,\n      data: state.data\n    });\n\n    try {\n      const token = localStorage.getItem('access_token');\n\n      const newDate = _.remove([ ...state.data ], (item) => {\n        return item.id !== id;\n      });\n  \n      const config = {\n        headers: {\n          Authorization: token\n        }\n      };\n  \n      await api.delete(`${url}/${id}`, config);\n\n      dispatch({\n        type: types.LOADED,\n        data: newDate\n      });\n    } catch (error) {\n      if ([401, 403].includes(error.response.status)) {\n        forgetCredential();\n        history.push('/login');\n        return;\n      }\n\n      dispatch({\n        type: types.ERROR,\n        data: error.response.data\n      });\n    }\n  }, [state, history, forgetCredential]);\n\n  return {\n    state,\n    remove,\n    post,\n    get\n  }\n};\n\nexport default useRequest;\n","import './index.css';\nimport { useEffect, useState } from 'react';\nimport DateContainer from '../../Component/DateContainer';\nimport DatePicker from '../../Component/DatePicker';\nimport transformInterrupts from './transformInterrupts';\nimport useRequest from '../../Hooks/useRequest';\nimport { useSnackbar } from '../../Context/Snackbar';\n\nconst Dashboard = () => {\n  const [loaded, setLoaded] = useState(false);\n  const request = useRequest();\n  const snackbar = useSnackbar();\n\n  useEffect(() => {\n    if (!loaded) {\n      request.get('/interrupts', {}, transformInterrupts);\n      setLoaded(true);\n    }\n  }, [loaded, request]);\n\n  const handleRemoveDate = (id) => {\n    request.remove('/interrupts', id);\n    snackbar.show(`Leave for ${id} has been removed`, 'success');\n  };\n\n  const handleAddDate = (date, value) => {\n    request.post('/interrupts', +value);\n    snackbar.show(`Leave for ${value} has been added`, 'success');\n  };\n\n  return (\n    <div className=\"grid mx-auto justify-center justify-items-center min-w-full mt-16 grid-cols-12\">\n      <div className=\"row-span-1 col-span-12\">\n        <p className=\"text-6xl text-white mb-11\">\n          Add a leave\n        </p>\n      </div>\n      <div className=\"row-span-1 col-span-12 w-96\">\n        <DatePicker\n          handleDateChange={handleAddDate}\n        />\n      </div>\n      <div className=\"row-span-1 col-span-12 mt-12\">\n          <p className=\"text-6xl text-white mb-11\">\n            Upcoming leaves\n          </p>\n      </div>\n      <div className=\"row-span-8 col-span-12 mt-5\">\n        <DateContainer\n          data={request.state.data}\n          isLoaded={loaded}\n          onCardRemove={handleRemoveDate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import {\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom';\nimport './App.css';\nimport { AuthenticationProvider } from './Context/Auth';\nimport GuestRoute from './Component/GuestRoute';\nimport ProtectedRoute from './Component/ProtectedRoute';\nimport { SnackbarProvider } from './Context/Snackbar';\n\nimport Topbar from './Component/Topbar';\nimport Login from './Ui/app.login';\nimport Dashboard from './Ui/app.dashboard';\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <SnackbarProvider>\n          <AuthenticationProvider>\n            <Router>\n              <Topbar>\n                <Switch>\n                  <GuestRoute exact path=\"/login\" component={Login} />\n                  <ProtectedRoute exact path=\"/\" component={Dashboard} />\n                </Switch>\n              </Topbar>\n            </Router>\n          </AuthenticationProvider>\n        </SnackbarProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}